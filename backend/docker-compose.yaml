#Vamos usar o docker compose porque facilita subir o container da aplicacao e do banco de dados tudo junto
#define a versao do docker compose que vamos usar
version: '3'

#Aqui vai definir os nomes dos containers que vamos ter rodando
services:
  app: #Vai ser o nosso container da aplicacao. Para acessar o bash nele usa o comando docker compose exec app bash
    build: . #build . vai especificar que este container deve rodar a partir do dockerfile na pasta atual
    ports:
      - "3000:3000" #habilita a visibilidade da porta 3000 do container rodando
      - "5555:5555"
    volumes:
      - .:/home/node/app #Aqui mapeamos a pasta atual para dentro da pasta /app dentro do container
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # sempre que precisar parar os container rode o comando:
  # docker compose down --volumes
  
  # db:
  #   image: bitnami/mongodb:5.0.17
  #   volumes:
  #     - mongodb_data:/bitnami/mongodb
  #   # ports:
  #   #   - 27017:27017
  #   environment:
  #     MONGODB_ROOT_PASSWORD: root
  #     MONGODB_REPLICA_SET_MODE: primary
  #     MONGODB_REPLICA_SET_KEY: 123456
  #     MONGODB_DATABASE: nest
  
  redis:
    image: redis:7.0.8-alpine

  db:
    build: ./db
    environment:
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_REPLICA_HOST: db
    volumes:
       - mongodb_data:/data/db

volumes:
  mongodb_data:
    driver: local